package searchindex

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// AutocompleteMode enumerates the values for autocomplete mode.
type AutocompleteMode string

const (
	// OneTerm ...
	OneTerm AutocompleteMode = "oneTerm"
	// OneTermWithContext ...
	OneTermWithContext AutocompleteMode = "oneTermWithContext"
	// TwoTerms ...
	TwoTerms AutocompleteMode = "twoTerms"
)

// PossibleAutocompleteModeValues returns an array of possible values for the AutocompleteMode const type.
func PossibleAutocompleteModeValues() []AutocompleteMode {
	return []AutocompleteMode{OneTerm, OneTermWithContext, TwoTerms}
}

// IndexActionType enumerates the values for index action type.
type IndexActionType string

const (
	// Delete ...
	Delete IndexActionType = "delete"
	// Merge ...
	Merge IndexActionType = "merge"
	// MergeOrUpload ...
	MergeOrUpload IndexActionType = "mergeOrUpload"
	// Upload ...
	Upload IndexActionType = "upload"
)

// PossibleIndexActionTypeValues returns an array of possible values for the IndexActionType const type.
func PossibleIndexActionTypeValues() []IndexActionType {
	return []IndexActionType{Delete, Merge, MergeOrUpload, Upload}
}

// QueryType enumerates the values for query type.
type QueryType string

const (
	// Full ...
	Full QueryType = "full"
	// Simple ...
	Simple QueryType = "simple"
)

// PossibleQueryTypeValues returns an array of possible values for the QueryType const type.
func PossibleQueryTypeValues() []QueryType {
	return []QueryType{Full, Simple}
}

// SearchMode enumerates the values for search mode.
type SearchMode string

const (
	// All ...
	All SearchMode = "all"
	// Any ...
	Any SearchMode = "any"
)

// PossibleSearchModeValues returns an array of possible values for the SearchMode const type.
func PossibleSearchModeValues() []SearchMode {
	return []SearchMode{All, Any}
}
